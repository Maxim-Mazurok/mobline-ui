{"version":3,"sources":["serviceWorker.tsx","actions/snackbar.ts","App.tsx","actions/index.ts","Components/TopBar.tsx","reducers/user.ts","reducers/loadCompetitors.ts","reducers/menu.ts","reducers/addCompetitor.ts","reducers/snackbar.ts","store.ts","selectors.ts","Components/MainDrawer.tsx","Auth/auth0-variables.tsx","actions/getCustomerId.ts","Components/Lock.tsx","actions/loadCompetitors.ts","actions/addCompetitor.ts","Components/AddCompetitor.tsx","Components/InviteCode.tsx","Components/CompetitorsList.tsx","Components/Snackbar.tsx","history.tsx","index.tsx","routes.tsx"],"names":["Boolean","window","location","hostname","match","SnackbarType","MenuItemType","showSnackbarAction","data","type","payload","API_URL","process","openDrawer","action","closeDrawer","handleLogin","userInfo","handleUserProfile","profile","setInviteCode","inviteCode","TopBar","classes","this","props","react_default","a","createElement","className","root","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","onClick","Menu_default","Typography","title","variant","noWrap","Component","TopBarConnected","connect","_ref","userProfile","user","dispatch","bindActionCreators","withStyles","theme","createStyles","flexGrow","marginRight","spacing","Object","defineProperty","display","breakpoints","up","search","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","&:focus","userReducer","state","arguments","length","undefined","defaultState","localStorage","setItem","accessToken","idToken","expiresAt","toString","objectSpread","JSON","stringify","customerIdLoading","customerIdError","customerId","loadCompetitorsReducer","loadCompetitors","loading","error","competitors","menuReducer","menu","selectedMenuIndex","drawerIsOpen","addCompetitorReducer","addCompetitor","username","showModal","snackbarReducer","snackbar","getItem","parseInt","userProfileString","parse","e","console","getInitialUserProfile","customerIdString","Number","isNaN","getInitialCustomerId","HIDDEN","store","rootReducer","combineReducers","createStore","compose","applyMiddleware","thunk","devToolsEnhancer","trace","configureStore","inviteCodeIsCorrect","isLoggedIn","Date","getTime","MainDrawer","drawerItemsList","role","style","_this","toggleDrawer","onKeyDown","List","flexDirection","menuItems","map","menuItem","index","ITEM","ListItem","button","key","ListItemText","primary","text","DIVIDER","Divider","MARGIN_TOP_AUTO","marginTop","concat","open","_this2","event","SwipeableDrawer","onClose","onOpen","MainDrawerConnected","AUTH_CONFIG","domain","clientID","container","getCustomerIdSuccess","getCustomerIdFailure","getCustomerId","asyncToGenerator","regenerator_default","mark","_callee","getState","wrap","_context","prev","next","axios","post","sub","then","result","catch","errorMessage","response","message","ERROR","finally","stop","_x","_x2","apply","calcExpiresAt","expiresIn","Lock","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","lock","Auth0Lock","auth","responseType","sso","languageDictionary","logo","primaryColor","allowedConnections","onAuthenticated","on","handleAuth","authResult","getUserInfo","test","hash","checkSession","log","forceUpdate","show","setState","Modal","Box","alignContent","minHeight","CircularProgress","id","hide","withRouter","margin","loadCompetitorsFailure","addCompetitorSetUsername","addCompetitorShowModal","addCompetitorFailure","INFO","SUCCESS","MyPaper","styled","Paper","_ref2","outline","top","left","transform","AddCompetitor","handleChange","target","value","disableBackdropClick","onBackdropClick","component","maxWidth","Link","href","onSubmit","preventDefault","TextField","disabled","label","onChange","fullWidth","buttonWrapper","Button","size","buttonProgress","red","loadingIconSize","InviteCode","showInviteCode","triedToSubmit","rel","InputProps","endAdornment","InputAdornment","VisibilityOff","Visibility","CompetitorsList","Fragment","fabWrapper","Fab","Add_default","loadCompetitorsLoading","loadCompetitorsError","gutterBottom","loadCompetitorsCompetitors","competitor","userPk","noCompetitorsFound","CompetitorsListConnected","right","bottom","grey","variantIcon","_variantIcon","CheckCircleIcon","WARNING","WarningIcon","ErrorIcon","InfoIcon","Snackbar","handleClose","reason","Icon","Snackbar_Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","aria-describedby","clsx","icon","iconVariant","Close_default","SnackbarConnected","_createStyles","green","amber","dark","fontSize","opacity","App","logout","alert","userCustomerId","CssBaseline","Components_InviteCode","Components_AddCompetitor","Components_Lock","Container","mainContainer","Grid","item","xs","userCustomerIdLoading","userCustomerIdError","name","marginBottom","createBrowserHistory","routes","es","react_router","history","path","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c12fd0f.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\n// noinspection JSUnusedGlobalSymbols\nexport function register(config: any) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: any, config: any) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: any, config: any) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      // noinspection JSIgnoredPromiseFromCall\n      registration.unregister();\n    });\n  }\n}\n","export const SHOW_SNACKBAR = 'showSnackbar';\nexport type SHOW_SNACKBAR = 'showSnackbar';\n\nexport enum SnackbarType {\n  SUCCESS = 'SUCCESS',\n  WARNING = 'WARNING',\n  ERROR = 'ERROR',\n  INFO = 'INFO',\n  HIDDEN = 'HIDDEN',\n}\n\nexport type SnackbarData = {\n  type: SnackbarType,\n  title: string,\n};\n\nexport const showSnackbarAction = (data: SnackbarData): SnackbarAction => ({\n  type: SHOW_SNACKBAR,\n  payload: data,\n});\n\nexport interface SnackbarAction {\n  type: typeof SHOW_SNACKBAR,\n  payload: SnackbarData,\n}\n","import React, { Component } from 'react';\nimport './App.scss';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { TopBarConnected } from \"./Components/TopBar\";\nimport { MainDrawerConnected } from \"./Components/MainDrawer\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport Lock from \"./Components/Lock\";\nimport InviteCode from \"./Components/InviteCode\";\nimport GlobalState from \"./types/GlobalState\";\nimport { inviteCodeIsCorrect, isLoggedIn } from \"./selectors\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { loadCompetitors } from \"./actions/loadCompetitors\";\nimport { getCustomerId } from \"./actions/getCustomerId\";\nimport { CompetitorsListConnected } from \"./Components/CompetitorsList\";\nimport { SnackbarConnected } from \"./Components/Snackbar\";\nimport {\n  CircularProgress,\n  Container,\n  createStyles,\n  Grid,\n  StyledComponentProps,\n  Theme,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport AddCompetitor from \"./Components/AddCompetitor\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    mainContainer: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2),\n    },\n    errorMessage: {\n      color: red[300],\n    },\n  });\n\nexport enum MenuItemType {\n  ITEM = 'item',\n  DIVIDER = 'divider',\n  MARGIN_TOP_AUTO = 'mt-auto',\n}\n\nexport type MenuItem = {\n  type: MenuItemType,\n  text?: string,\n}\n\nconst menuItems: MenuItem[] = [\n  {\n    type: MenuItemType.ITEM,\n    text: 'Dashboard',\n  },\n  {\n    type: MenuItemType.DIVIDER,\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Posts',\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Stories',\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'IGTV',\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Promoted Content',\n  },\n  {\n    type: MenuItemType.DIVIDER,\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Positive sentiment',\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Negative sentiment',\n  },\n  {\n    type: MenuItemType.MARGIN_TOP_AUTO,\n  },\n  {\n    type: MenuItemType.DIVIDER,\n  },\n  {\n    type: MenuItemType.ITEM,\n    text: 'Settings',\n  }\n];\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      loadCompetitors,\n      getCustomerId,\n    },\n    dispatch\n  );\n\nconst mapStateToProps = ({ user, loadCompetitors }: GlobalState) => ({\n  inviteCodeIsCorrect: inviteCodeIsCorrect(user),\n  isLoggedIn: isLoggedIn(user),\n  userProfile: user.userProfile || { name: \"Not logged in\" },\n  loadCompetitors: loadCompetitors,\n  userCustomerId: user.customerId,\n  userCustomerIdLoading: user.customerIdLoading,\n  userCustomerIdError: user.customerIdError,\n});\n\nexport type AppProps =\n  ReturnType<typeof mapDispatchToProps>\n  & ReturnType<typeof mapStateToProps>\n  & StyledComponentProps\n  & {\n  classes: {\n    errorMessage: string,\n    mainContainer: string,\n  }\n};\n\nexport type RouterAppProps = RouteComponentProps<{}>;\n\ntype AppState = {}\n\nclass App extends Component<RouteComponentProps<{}> & AppProps, AppState> {\n  componentWillMount(): void {\n    if (this.props.isLoggedIn && this.props.userCustomerId === null) {\n      this.props.getCustomerId();\n    }\n    // this.props.loadCompetitors();\n  }\n\n  logout: () => void = () => {\n    //TODO\n    alert('logout');\n  };\n\n  render(): React.ReactElement {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <CssBaseline />\n        <TopBarConnected title=\"Mobline\" />\n        <MainDrawerConnected menuItems={menuItems} />\n        <InviteCode />\n        <AddCompetitor />\n        {this.props.inviteCodeIsCorrect && !this.props.isLoggedIn ? <Lock /> : null}\n        {/*<h1>*/}\n        {/*  {this.props.userProfile.name}*/}\n        {/*</h1>*/}\n        {this.props.isLoggedIn &&\n        <Container\n          className={classes.mainContainer}\n        >\n          <Grid container spacing={3}>\n            <Grid item xs={10}>\n              {this.props.userCustomerIdLoading ?\n                <CircularProgress />\n                :\n                this.props.userCustomerIdError ?\n                  <Typography\n                    variant=\"h5\"\n                    gutterBottom\n                    className={classes.errorMessage}\n                  >\n                    {this.props.userCustomerIdError}\n                  </Typography>\n                  :\n                  this.props.userCustomerId === null ? null : <CompetitorsListConnected />\n              }\n            </Grid>\n          </Grid>\n        </Container>\n        }\n        <SnackbarConnected />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(App)));\n","import { SelectMenuAction } from \"./selectMenuAction\";\nimport { action } from 'typesafe-actions';\nimport { SelectedMenuIndex, UserInfo } from \"../types/GlobalState\";\nimport { OpenDrawerAction } from \"./openDrawerAction\";\nimport { CloseDrawerAction } from \"./closeDrawerAction\";\nimport { Auth0UserProfile } from \"auth0-js\";\nimport { HandleLoginAction } from \"./handleLoginAction\";\nimport { UserProfileAction } from \"./userProfileAction\";\nimport { SetInviteCodeAction } from \"./setInviteCodeAction\";\nimport { LoadCompetitorsAction } from \"./loadCompetitors\";\nimport { GetCustomerIdAction } from \"./getCustomerId\";\nimport { AddCompetitorAction } from \"./addCompetitor\";\nimport { SHOW_SNACKBAR, SnackbarAction, SnackbarData } from \"./snackbar\";\n\nexport const API_URL = process.env.REACT_APP_API_URL;\n\nexport const SELECT_MENU = 'selectMenuAction';\nexport const OPEN_DRAWER = 'openDrawerAction';\nexport const CLOSE_DRAWER = 'closeDrawerAction';\nexport const HANDLE_LOGIN = 'handleLoginAction';\nexport const USER_PROFILE = 'userProfileAction';\nexport const SET_INVITE_CODE = 'setInviteCodeAction';\n\nexport const GET_CUSTOMER_ID_SUCCESS = 'getCustomerIdSuccess';\nexport type GET_CUSTOMER_ID_SUCCESS = 'getCustomerIdSuccess';\nexport const GET_CUSTOMER_ID_FAILURE = 'getCustomerIdFailure';\nexport type GET_CUSTOMER_ID_FAILURE = 'getCustomerIdFailure';\nexport const GET_CUSTOMER_ID_STARTED = 'getCustomerIdStarted';\nexport type GET_CUSTOMER_ID_STARTED = 'getCustomerIdStarted';\n\nexport type MenuAction =\n  | SelectMenuAction\n  | OpenDrawerAction\n  | CloseDrawerAction\n  ;\n\nexport type UserAction =\n  | HandleLoginAction\n  | UserProfileAction\n  | SetInviteCodeAction\n  | GetCustomerIdAction\n  ;\n\nexport type Actions =\n  & MenuAction\n  & UserAction\n  & LoadCompetitorsAction\n  & AddCompetitorAction\n  & SnackbarAction\n  ;\n\nexport const selectMenu = (index: SelectedMenuIndex) => action(SELECT_MENU, index);\nexport const openDrawer = () => action(OPEN_DRAWER);\nexport const closeDrawer = () => action(CLOSE_DRAWER);\nexport const handleLogin = (userInfo: UserInfo) => action(HANDLE_LOGIN, userInfo);\nexport const handleUserProfile = (profile: Auth0UserProfile) => action(USER_PROFILE, profile);\nexport const setInviteCode = (inviteCode: string) => action(SET_INVITE_CODE, inviteCode);\nexport const showSnackbar = (data: SnackbarData) => action(SHOW_SNACKBAR, data);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport {\n  createStyles,\n  IconButton,\n  StyledComponentProps,\n  Theme,\n  Toolbar,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport MenuIcon from '@material-ui/icons/Menu';\n// import SearchIcon from '@material-ui/icons/Search';\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { openDrawer } from \"../actions\";\nimport { fade } from \"@material-ui/core/styles\";\nimport GlobalState from \"../types/GlobalState\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      flexGrow: 1,\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: 120,\n        '&:focus': {\n          width: 200,\n        },\n      },\n    },\n  });\n\nconst mapStateToProps = ({ user }: GlobalState) => ({\n  userProfile: user.userProfile,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      openDrawer,\n    },\n    dispatch\n  );\n\nexport type TopBarProps =\n  ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {\n  title?: string,\n  classes: {\n    root: string,\n    menuButton: string,\n    title: string,\n    // search: string,\n    // searchIcon: string,\n    // inputRoot: string,\n    // inputInput: string,\n  },\n};\n\ntype TopBarState = {}\n\nclass TopBar extends Component<TopBarProps, TopBarState> {\n  render(): React.ReactElement<TopBarProps, React.JSXElementConstructor<TopBarState>> {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.props.openDrawer}>\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              {this.props.title}\n            </Typography>\n            {/*<div className={classes.search}>*/}\n            {/*  <div className={classes.searchIcon}>*/}\n            {/*    <SearchIcon />*/}\n            {/*  </div>*/}\n            {/*  <InputBase*/}\n            {/*    placeholder=\"Search…\"*/}\n            {/*    classes={{*/}\n            {/*      root: classes.inputRoot,*/}\n            {/*      input: classes.inputInput,*/}\n            {/*    }}*/}\n            {/*    inputProps={{ 'aria-label': 'Search' }}*/}\n            {/*  />*/}\n            {/*</div>*/}\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nexport const TopBarConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(TopBar));\n","import {\n  GET_CUSTOMER_ID_FAILURE,\n  GET_CUSTOMER_ID_STARTED,\n  GET_CUSTOMER_ID_SUCCESS,\n  HANDLE_LOGIN,\n  SET_INVITE_CODE,\n  USER_PROFILE,\n  UserAction\n} from \"../actions\";\nimport { defaultState } from \"../store\";\n\nexport const userReducer = (state: typeof defaultState.user = defaultState.user, action: UserAction): typeof defaultState.user => {\n  switch (action.type) {\n    case HANDLE_LOGIN:\n      localStorage.setItem('accessToken', action.payload.accessToken || \"\");\n      localStorage.setItem('idToken', action.payload.idToken || \"\");\n      localStorage.setItem('expiresAt', action.payload.expiresAt === null ? \"0\" : action.payload.expiresAt.toString());\n      return {\n        ...state,\n        userInfo: {\n          accessToken: action.payload.accessToken || null,\n          idToken: action.payload.idToken || null,\n          expiresAt: action.payload.expiresAt || null,\n        },\n      };\n    case USER_PROFILE:\n      localStorage.setItem('userProfile', action.payload === null ? \"{}\" : JSON.stringify(action.payload));\n      return {\n        ...state,\n        userProfile: action.payload,\n      };\n    case SET_INVITE_CODE:\n      localStorage.setItem('inviteCode', action.payload);\n      return {\n        ...state,\n        inviteCode: action.payload,\n      };\n    case GET_CUSTOMER_ID_STARTED:\n      return {\n        ...state,\n        customerIdLoading: true\n      };\n    case GET_CUSTOMER_ID_SUCCESS:\n      return {\n        ...state,\n        customerIdLoading: false,\n        customerIdError: null,\n        customerId: action.payload,\n      };\n    case GET_CUSTOMER_ID_FAILURE:\n      return {\n        ...state,\n        customerIdLoading: false,\n        customerIdError: action.payload || 'Unknown error',\n      };\n    default:\n      return state;\n  }\n};\n","import { defaultState } from \"../store\";\nimport { LoadCompetitorsAction } from \"../actions/loadCompetitors\";\n\nexport const LOAD_COMPETITORS_SUCCESS = 'loadCompetitorsSuccess';\nexport type LOAD_COMPETITORS_SUCCESS = 'loadCompetitorsSuccess';\nexport const LOAD_COMPETITORS_FAILURE = 'loadCompetitorsFailure';\nexport type LOAD_COMPETITORS_FAILURE = 'loadCompetitorsFailure';\nexport const LOAD_COMPETITORS_STARTED = 'loadCompetitorsStarted';\nexport type LOAD_COMPETITORS_STARTED = 'loadCompetitorsStarted';\n\nexport const loadCompetitorsReducer = (state: typeof defaultState.loadCompetitors = defaultState.loadCompetitors, action: LoadCompetitorsAction): typeof defaultState.loadCompetitors => {\n  switch (action.type) {\n    case LOAD_COMPETITORS_STARTED:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOAD_COMPETITORS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        competitors: action.payload,\n      };\n    case LOAD_COMPETITORS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload || 'Unknown error',\n      };\n    default:\n      return state;\n  }\n};\n","import { CLOSE_DRAWER, MenuAction, OPEN_DRAWER, SELECT_MENU } from \"../actions\";\nimport { defaultState } from \"../store\";\n\nexport const menuReducer = (state: typeof defaultState.menu = defaultState.menu, action: MenuAction): typeof defaultState.menu => {\n  switch (action.type) {\n    case SELECT_MENU:\n      return {\n        ...state,\n        selectedMenuIndex: action.payload,\n      };\n    case OPEN_DRAWER:\n      return {\n        ...state,\n        drawerIsOpen: true,\n      };\n    case CLOSE_DRAWER:\n      return {\n        ...state,\n        drawerIsOpen: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { defaultState } from \"../store\";\nimport { AddCompetitorAction } from \"../actions/addCompetitor\";\n\nexport const ADD_COMPETITOR_SET_USERNAME = 'addCompetitorSetUsername';\nexport type ADD_COMPETITOR_SET_USERNAME = 'addCompetitorSetUsername';\n\nexport const ADD_COMPETITOR_SHOW_MODAL = 'addCompetitorShowModal';\nexport type ADD_COMPETITOR_SHOW_MODAL = 'addCompetitorShowModal';\n\nexport const ADD_COMPETITOR_SUCCESS = 'addCompetitorSuccess';\nexport type ADD_COMPETITOR_SUCCESS = 'addCompetitorSuccess';\n\nexport const ADD_COMPETITOR_FAILURE = 'addCompetitorFailure';\nexport type ADD_COMPETITOR_FAILURE = 'addCompetitorFailure';\n\nexport const ADD_COMPETITOR_STARTED = 'addCompetitorStarted';\nexport type ADD_COMPETITOR_STARTED = 'addCompetitorStarted';\n\nexport const addCompetitorReducer = (state: typeof defaultState.addCompetitor = defaultState.addCompetitor, action: AddCompetitorAction): typeof defaultState.addCompetitor => {\n  switch (action.type) {\n    case ADD_COMPETITOR_SET_USERNAME:\n      return {\n        ...state,\n        username: action.payload || \"\",\n      };\n    case ADD_COMPETITOR_SHOW_MODAL:\n      return {\n        ...state,\n        showModal: action.payload,\n      };\n    case ADD_COMPETITOR_STARTED:\n      return {\n        ...state,\n        loading: true,\n      };\n    case ADD_COMPETITOR_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n      };\n    case ADD_COMPETITOR_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload || 'Unknown error',\n      };\n    default:\n      return state;\n  }\n};\n","import { defaultState } from \"../store\";\nimport { SHOW_SNACKBAR, SnackbarAction } from \"../actions/snackbar\";\n\nexport const snackbarReducer = (state: typeof defaultState.snackbar = defaultState.snackbar, action: SnackbarAction): typeof defaultState.snackbar => {\n  // noinspection JSRedundantSwitchStatement\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, combineReducers, compose, createStore, Reducer, Store } from \"redux\";\nimport GlobalState from \"./types/GlobalState\";\nimport { Actions } from \"./actions\";\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport { userReducer } from \"./reducers/user\";\nimport { Auth0UserProfile } from \"auth0-js\";\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\nimport { loadCompetitorsReducer } from \"./reducers/loadCompetitors\";\nimport { menuReducer } from \"./reducers/menu\";\nimport { addCompetitorReducer } from \"./reducers/addCompetitor\";\nimport { snackbarReducer } from \"./reducers/snackbar\";\nimport { SnackbarType } from \"./actions/snackbar\";\n\nconst getInitialUserProfile = (): Auth0UserProfile | null => {\n  const userProfileString = localStorage.getItem('userProfile');\n  if (userProfileString !== null && userProfileString !== \"{}\") {\n    try {\n      return JSON.parse(userProfileString);\n    } catch (e) {\n      console.error('Error parsing user profile: ', e);\n    }\n  }\n  return null;\n};\nconst getInitialCustomerId = (): number | null => {\n  const customerIdString = localStorage.getItem('customerId');\n  if (customerIdString !== null && customerIdString !== \"\") {\n    const customerId = parseInt(customerIdString);\n    if (!Number.isNaN(customerId)) return customerId;\n  }\n  return null;\n};\n\nexport const defaultState: GlobalState = {\n  menu: {\n    selectedMenuIndex: undefined,\n    drawerIsOpen: false,\n  },\n  user: {\n    userInfo: {\n      accessToken: localStorage.getItem('accessToken') || null,\n      idToken: localStorage.getItem('idToken') || null,\n      expiresAt: parseInt(localStorage.getItem('expiresAt') || \"0\"),\n    },\n    userProfile: getInitialUserProfile(),\n    inviteCode: localStorage.getItem('inviteCode') || \"\",\n    customerId: getInitialCustomerId(),\n    customerIdLoading: false,\n    customerIdError: null,\n  },\n  loadCompetitors: {\n    loading: false,\n    competitors: [],\n    error: null,\n  },\n  addCompetitor: {\n    loading: false,\n    username: \"\",\n    error: null,\n    showModal: false,\n  },\n  snackbar: {\n    type: SnackbarType.HIDDEN,\n    title: \"\",\n  },\n};\n\nconst configureStore = (state: GlobalState = defaultState): Store => {\n  const rootReducer: Reducer<GlobalState, Actions> = combineReducers({\n    menu: menuReducer,\n    user: userReducer,\n    loadCompetitors: loadCompetitorsReducer,\n    addCompetitor: addCompetitorReducer,\n    snackbar: snackbarReducer,\n  });\n  return createStore(\n    rootReducer as Reducer<GlobalState, Actions>,\n    state as any,\n    compose(\n      applyMiddleware(\n        thunk as ThunkMiddleware<GlobalState, Actions>,\n      ),\n      devToolsEnhancer({ trace: true })\n    )\n  );\n};\n\nexport const store = configureStore();\n","import { defaultState } from \"./store\";\nimport { SelectedMenuIndex } from \"./types/GlobalState\";\n\nexport const getSelectedMenuIndex = (state: typeof defaultState.menu): SelectedMenuIndex => state.selectedMenuIndex;\nexport const drawerIsOpen = (state: typeof defaultState.menu = defaultState.menu): boolean => state.drawerIsOpen;\nexport const inviteCodeIsCorrect = (state: typeof defaultState.user = defaultState.user): boolean => state.inviteCode === 'moblinebeta';\nexport const isLoggedIn = (state: typeof defaultState.user = defaultState.user): boolean => {\n  if (state.userInfo.expiresAt === null) {\n    return false;\n  }\n  return new Date().getTime() < state.userInfo.expiresAt;\n};\n","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { closeDrawer, openDrawer } from \"../actions\";\nimport { Divider, List, SwipeableDrawer } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { MenuItem, MenuItemType } from \"../App\";\nimport GlobalState from \"../types/GlobalState\";\nimport { drawerIsOpen } from \"../selectors\";\n\nconst mapStateToProps = ({ menu }: GlobalState) => ({\n  selectedMenuIndex: menu.selectedMenuIndex,\n  drawerIsOpen: drawerIsOpen(menu),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      openDrawer,\n      closeDrawer,\n    },\n    dispatch\n  );\n\nexport type MainDrawerProps = ReturnType<typeof mapStateToProps> & ReturnType<typeof mapDispatchToProps> & {\n  title?: string,\n  menuItems: MenuItem[],\n};\n\ntype MainDrawerState = {}\n\nclass MainDrawer extends Component<MainDrawerProps, MainDrawerState> {\n  private drawerItemsList = ((): React.ReactElement => {\n    return (\n      <div\n        role=\"presentation\"\n        style={{ height: '100%' }}\n        onClick={this.toggleDrawer(false)}\n        onKeyDown={this.toggleDrawer(false)}\n      >\n        <List\n          style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\n        >\n          {\n            this.props.menuItems.map((menuItem, index) => {\n              switch (menuItem.type) {\n                case MenuItemType.ITEM:\n                  return (\n                    <ListItem button key={index}>\n                      {/*<ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>*/}\n                      <ListItemText primary={menuItem.text} />\n                    </ListItem>\n                  );\n                case MenuItemType.DIVIDER:\n                  return (\n                    <Divider key={index} />\n                  );\n                case MenuItemType.MARGIN_TOP_AUTO:\n                  return (\n                    <div key={index} style={{ marginTop: 'auto' }} />\n                  );\n                default:\n                  console.error(`Unknown menu item type: ${menuItem.type}`, menuItem);\n                  return null;\n              }\n            })\n          }\n        </List>\n      </div>\n    );\n  })();\n\n  toggleDrawer(open: boolean) {\n    return (event: React.KeyboardEvent | React.MouseEvent) => {\n      if (\n        event &&\n        event.type === 'keydown' &&\n        ((event as React.KeyboardEvent).key === 'Tab' ||\n          (event as React.KeyboardEvent).key === 'Shift')\n      ) {\n        return;\n      }\n\n      open ? this.props.openDrawer() : this.props.closeDrawer();\n    };\n  }\n\n  render(): React.ReactElement<MainDrawerProps, React.JSXElementConstructor<MainDrawerState>> {\n    return (\n      <div>\n        <SwipeableDrawer\n          open={this.props.drawerIsOpen}\n          onClose={this.toggleDrawer(false)}\n          onOpen={this.toggleDrawer(true)}\n        >\n          {this.drawerItemsList}\n        </SwipeableDrawer>\n      </div>\n    );\n  }\n}\n\nexport const MainDrawerConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(MainDrawer);\n","export const AUTH_CONFIG = {\n  domain: 'mobline.auth0.com',\n  clientID: 'Lk0zxN5Hfm8LFD4vqwX8PL9fNC0Po5so',\n  container: 'auth0-login-container',\n};\n","import axios from 'axios';\nimport { API_URL, GET_CUSTOMER_ID_FAILURE, GET_CUSTOMER_ID_STARTED, GET_CUSTOMER_ID_SUCCESS } from \"./index\";\nimport { ThunkAction } from \"redux-thunk\";\nimport GlobalState from \"../types/GlobalState\";\nimport { Dispatch } from \"redux\";\nimport { showSnackbarAction, SnackbarAction, SnackbarType } from \"./snackbar\";\n\nconst getCustomerIdSuccess = (customerId: number | null): {\n  type: GET_CUSTOMER_ID_SUCCESS,\n  payload: number | null,\n} => {\n  localStorage.setItem('customerId', customerId ? customerId.toString() : \"\");\n  return {\n    type: GET_CUSTOMER_ID_SUCCESS,\n    payload: customerId,\n  };\n};\n\nconst getCustomerIdStarted = (): {\n  type: GET_CUSTOMER_ID_STARTED,\n} => ({\n  type: GET_CUSTOMER_ID_STARTED\n});\n\nconst getCustomerIdFailure = (error: string): {\n  type: GET_CUSTOMER_ID_FAILURE,\n  payload: string,\n} => ({\n  type: GET_CUSTOMER_ID_FAILURE,\n  payload: error,\n});\n\nexport type GetCustomerIdAction =\n  | ReturnType<typeof getCustomerIdStarted>\n  | ReturnType<typeof getCustomerIdSuccess>\n  | ReturnType<typeof getCustomerIdFailure>\n  ;\n\ntype ThunkResult<R> = ThunkAction<R, GlobalState, undefined, GetCustomerIdAction>;\n\nexport const getCustomerId = (): ThunkResult<Promise<void>> => {\n  return async (dispatch: Dispatch<GetCustomerIdAction | SnackbarAction>, getState: () => GlobalState) => {\n    dispatch(getCustomerIdStarted());\n\n    const state = getState();\n\n    axios\n      .post(`${API_URL}/get_customer_id.php`, {\n        sub: state.user.userProfile ? state.user.userProfile.sub : \"\",\n      })\n      .then(result => {\n        let customerId: number | null = parseInt(result.data);\n        if (Number.isNaN(customerId)) customerId = null;\n        dispatch(getCustomerIdSuccess(customerId));\n      })\n      .catch(error => {\n        const errorMessage = error.response ? error.response.data : error.message;\n        dispatch(getCustomerIdFailure(errorMessage));\n        dispatch(showSnackbarAction({\n          title: errorMessage,\n          type: SnackbarType.ERROR,\n        }));\n      })\n      .finally(() => {\n        return;\n      });\n  };\n};\n","//TODO: add renew session?\n\nimport React, { Component } from 'react';\nimport Auth0Lock from 'auth0-lock';\nimport { AUTH_CONFIG } from '../Auth/auth0-variables';\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { handleLogin, handleUserProfile } from \"../actions\";\nimport GlobalState from \"../types/GlobalState\";\nimport { connect } from \"react-redux\";\nimport { Auth0UserProfile } from \"auth0-js\";\nimport { Box, CircularProgress, createStyles, Modal, StyledComponentProps, withStyles } from \"@material-ui/core\";\nimport { RouteComponentProps, withRouter } from \"react-router\";\nimport { getCustomerId } from \"../actions/getCustomerId\";\nimport { isLoggedIn } from \"../selectors\";\n\nexport const calcExpiresAt = (expiresIn: number) => (expiresIn * 1000) + new Date().getTime();\n\nconst mapStateToProps = ({ user }: GlobalState) => ({\n  userInfo: user.userInfo,\n  userProfile: user.userProfile,\n  isLoggedIn: isLoggedIn(user),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      handleLogin,\n      handleUserProfile,\n      getCustomerId,\n    },\n    dispatch\n  );\n\ntype LockState = {\n  loading: boolean,\n};\n\nexport type LockProps =\n  RouteComponentProps<{}>\n  & ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {\n  classes: {\n    loading: string,\n  }\n};\n\nconst styles = () =>\n  createStyles({\n    loading: {\n      margin: \"auto\",\n    },\n  });\n\nclass Lock extends Component<LockProps, LockState> {\n  state = {\n    loading: true,\n  };\n\n  lock = new Auth0Lock(AUTH_CONFIG.clientID, AUTH_CONFIG.domain, {\n    auth: {\n      responseType: 'token id_token',\n      sso: false,\n    },\n    languageDictionary: {\n      title: \"Mobline\"\n    },\n    container: AUTH_CONFIG.container,\n    theme: {\n      logo: '/logo.png',\n      primaryColor: '#3f51b5'\n    },\n    allowedConnections: [\n      'Username-Password-Authentication',\n      'facebook',\n      'google-oauth2',\n    ]\n  });\n\n  constructor(props: LockProps) {\n    super(props);\n    this.onAuthenticated();\n  }\n\n  onAuthenticated = () => {\n    this.lock.on('authenticated', this.handleAuth);\n  };\n\n  componentDidMount() {\n    // Avoid showing Lock when hash is parsed.\n    if (!(/access_token|id_token|error/.test(this.props.location.hash))) {\n      if (this.props.isLoggedIn) {\n        this.lock.checkSession({}, (error, authResult) => {\n          console.log('callback: ', error, authResult);\n          if (error || !authResult) {\n            this.forceUpdate(() => {\n              this.lock.show();\n            });\n          } else {\n            this.handleAuth(authResult);\n          }\n          this.setState({ loading: false });\n        });\n      } else {\n        this.setState({ loading: false });\n        this.forceUpdate(() => {\n          this.lock.show();\n        });\n      }\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <Modal open={true}>\n        <Box display=\"grid\" alignContent=\"center\" minHeight=\"100%\">\n          {this.state.loading && <CircularProgress\n            className={classes.loading}\n          />}\n          <div id={AUTH_CONFIG.container} />\n        </Box>\n      </Modal>\n    );\n  }\n\n  componentWillUnmount(): void {\n    this.lock.hide();\n  }\n\n  private handleAuth = (authResult: AuthResult) => {\n    const accessToken = authResult.accessToken || null;\n    const idToken = authResult.idToken || null;\n    const expiresAt = calcExpiresAt(authResult.expiresIn || 0);\n\n    this.props.handleLogin({\n      accessToken,\n      idToken,\n      expiresAt,\n    });\n\n    if (accessToken !== null) {\n      this.lock.getUserInfo(accessToken, (error: any, profile: Auth0UserProfile) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n\n        this.props.handleUserProfile(profile);\n        this.props.getCustomerId();\n      });\n    }\n  };\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(Lock)));\n","import axios from 'axios';\nimport { ThunkAction } from \"redux-thunk\";\nimport GlobalState, { Competitor } from \"../types/GlobalState\";\nimport { Dispatch } from \"redux\";\nimport {\n  LOAD_COMPETITORS_FAILURE,\n  LOAD_COMPETITORS_STARTED,\n  LOAD_COMPETITORS_SUCCESS\n} from \"../reducers/loadCompetitors\";\nimport { showSnackbarAction, SnackbarAction, SnackbarType } from \"./snackbar\";\nimport { API_URL } from \"./index\";\n\nconst loadCompetitorsSuccess = (competitors: Competitor[]): {\n  type: LOAD_COMPETITORS_SUCCESS,\n  payload: Competitor[],\n} => ({\n  type: LOAD_COMPETITORS_SUCCESS,\n  payload: competitors,\n});\n\nconst loadCompetitorsStarted = (): {\n  type: LOAD_COMPETITORS_STARTED,\n} => ({\n  type: LOAD_COMPETITORS_STARTED\n});\n\nconst loadCompetitorsFailure = (error: string): {\n  type: LOAD_COMPETITORS_FAILURE,\n  payload: string,\n} => ({\n  type: LOAD_COMPETITORS_FAILURE,\n  payload: error,\n});\n\nexport type LoadCompetitorsAction =\n  | ReturnType<typeof loadCompetitorsStarted>\n  | ReturnType<typeof loadCompetitorsSuccess>\n  | ReturnType<typeof loadCompetitorsFailure>\n  ;\n\ntype ThunkResult<R> = ThunkAction<R, GlobalState, undefined, LoadCompetitorsAction>;\n\nexport const loadCompetitors = (): ThunkResult<Promise<void>> => {\n  return async (dispatch: Dispatch<LoadCompetitorsAction | SnackbarAction>, getState: () => GlobalState) => {\n    dispatch(loadCompetitorsStarted());\n\n    const state = getState();\n\n    axios\n      .post(`${API_URL}/get_competitors.php`, {\n        customerId: state.user.customerId,\n      })\n      .then(result => {\n        dispatch(loadCompetitorsSuccess(result.data));\n      })\n      .catch(error => {\n        const errorMessage = error.response ? error.response.data : error.message;\n        dispatch(loadCompetitorsFailure(errorMessage));\n        dispatch(showSnackbarAction({\n          title: errorMessage,\n          type: SnackbarType.ERROR,\n        }));\n      })\n      .finally(() => {\n        return;\n      });\n  };\n};\n","import axios from 'axios';\nimport { ThunkAction, ThunkDispatch } from \"redux-thunk\";\nimport GlobalState from \"../types/GlobalState\";\nimport { Dispatch } from \"redux\";\nimport {\n  ADD_COMPETITOR_FAILURE,\n  ADD_COMPETITOR_SET_USERNAME,\n  ADD_COMPETITOR_SHOW_MODAL,\n  ADD_COMPETITOR_STARTED,\n  ADD_COMPETITOR_SUCCESS,\n} from \"../reducers/addCompetitor\";\nimport { loadCompetitors, LoadCompetitorsAction } from \"./loadCompetitors\";\nimport { showSnackbarAction, SnackbarAction, SnackbarType } from \"./snackbar\";\nimport { API_URL } from \"./index\";\n\nexport type IGUsername = string;\n\nexport const addCompetitorSetUsername = (username: IGUsername): {\n  type: ADD_COMPETITOR_SET_USERNAME,\n  payload: IGUsername,\n} => ({\n  type: ADD_COMPETITOR_SET_USERNAME,\n  payload: username,\n});\n\nexport const addCompetitorShowModal = (show: boolean = true): {\n  type: ADD_COMPETITOR_SHOW_MODAL,\n  payload: boolean,\n} => ({\n  type: ADD_COMPETITOR_SHOW_MODAL,\n  payload: show,\n});\n\nconst addCompetitorSuccess = (): {\n  type: ADD_COMPETITOR_SUCCESS,\n} => ({\n  type: ADD_COMPETITOR_SUCCESS,\n});\n\nconst addCompetitorStarted = (): {\n  type: ADD_COMPETITOR_STARTED,\n} => ({\n  type: ADD_COMPETITOR_STARTED\n});\n\nconst addCompetitorFailure = (error: string): {\n  type: ADD_COMPETITOR_FAILURE,\n  payload: string,\n} => ({\n  type: ADD_COMPETITOR_FAILURE,\n  payload: error,\n});\n\nexport type AddCompetitorAction =\n  | ReturnType<typeof addCompetitorSetUsername>\n  | ReturnType<typeof addCompetitorShowModal>\n  | ReturnType<typeof addCompetitorStarted>\n  | ReturnType<typeof addCompetitorSuccess>\n  | ReturnType<typeof addCompetitorFailure>\n  ;\n\ntype ThunkResult<R> = ThunkAction<R, GlobalState, undefined, AddCompetitorAction>;\n\nexport const addCompetitor = (): ThunkResult<Promise<void>> => {\n  return async (dispatch: Dispatch<AddCompetitorAction | SnackbarAction> & ThunkDispatch<GlobalState, undefined, LoadCompetitorsAction>, getState: () => GlobalState) => {\n    const state = getState();\n    const username = state.addCompetitor.username;\n\n    dispatch(addCompetitorStarted());\n\n    axios\n      .post(`${API_URL}/add_competitor.php`, {\n        customerId: state.user.customerId,\n        username,\n      })\n      .then((response) => {\n        dispatch(addCompetitorSuccess());\n\n        switch (response.data) {\n          case 'Competitor already added.':\n          case 'Competitor already queued for processing.':\n            dispatch(showSnackbarAction({\n              title: response.data,\n              type: SnackbarType.INFO,\n            }));\n            break;\n          case 'Request timed out.':\n            dispatch(showSnackbarAction({\n              title: 'Worker is busy, your action is queued',\n              type: SnackbarType.INFO,\n            }));\n            break;\n          default:\n            dispatch(loadCompetitors()).then();\n            dispatch(showSnackbarAction({\n              title: 'Competitor added',\n              type: SnackbarType.SUCCESS,\n            }));\n            break;\n        }\n      })\n      .catch(error => {\n        const errorMessage = error.response ? error.response.data : error.message;\n        dispatch(addCompetitorFailure(errorMessage));\n        dispatch(showSnackbarAction({\n          title: errorMessage,\n          type: SnackbarType.ERROR,\n        }));\n      })\n      .finally(() => {\n        dispatch(addCompetitorSetUsername(\"\"));\n        return;\n      });\n  };\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  CircularProgress,\n  createStyles,\n  Link,\n  Modal,\n  Paper,\n  StyledComponentProps,\n  TextField,\n  Theme,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport { styled } from \"@material-ui/core/styles\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport GlobalState from \"../types/GlobalState\";\nimport { addCompetitor, addCompetitorSetUsername, addCompetitorShowModal } from \"../actions/addCompetitor\";\nimport { red } from \"@material-ui/core/colors\";\n\nconst mapStateToProps = ({ addCompetitor }: GlobalState) => ({\n  error: addCompetitor.error,\n  username: addCompetitor.username,\n  loading: addCompetitor.loading,\n  showModal: addCompetitor.showModal,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      addCompetitor,\n      addCompetitorSetUsername,\n      addCompetitorShowModal,\n    },\n    dispatch\n  );\n\nexport type AddCompetitorProps =\n  ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {\n  classes: {\n    buttonWrapper: string,\n    errorMessage: string,\n    buttonProgress: string,\n  }\n};\n\ntype AddCompetitorState = {};\n\nexport const MyPaper = styled(Paper)(({ theme }) => ({\n  padding: theme.spacing(3, 2),\n  margin: \"auto\",\n  position: \"absolute\",\n  outline: \"none\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n}));\n\nconst loadingIconSize = 24;\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    buttonWrapper: {\n      position: 'relative',\n      margin: theme.spacing(1, 0),\n    },\n    errorMessage: {\n      color: red[900],\n    },\n    buttonProgress: {\n      position: 'absolute',\n      top: loadingIconSize / 4,\n      left: loadingIconSize / 4,\n    },\n  });\n\nclass AddCompetitor extends Component<AddCompetitorProps, AddCompetitorState> {\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.addCompetitorSetUsername(event.target.value);\n  };\n\n  render(): React.ReactElement<AddCompetitorProps, React.JSXElementConstructor<AddCompetitorState>> {\n    const { classes } = this.props;\n\n    return (\n      <Modal\n        open={this.props.showModal}\n        disableBackdropClick={false}\n        onClose={() => this.props.addCompetitorShowModal(false)}\n        onBackdropClick={() => this.props.addCompetitorShowModal(false)}\n      >\n        <MyPaper>\n          <Typography variant=\"h5\" component=\"h3\">\n            Add competitor\n          </Typography>\n          <Typography component=\"p\" style={{ maxWidth: 365 }}>\n            Enter instagram handle of your competitor.<br />\n          </Typography>\n          <Typography component=\"p\" style={{ maxWidth: 365 }}>\n            For example, to add <Link href=\"https://instagram.com/maxim_mazurok\">maxim_mazurok</Link>, enter\n            \"maxim_mazurok\", without the at (\"@\") sign.\n          </Typography>\n          <form\n            onSubmit={(event) => {\n              event.preventDefault();\n              this.props.addCompetitor();\n            }}\n          >\n            <TextField\n              disabled={this.props.loading}\n              error={typeof this.props.error === \"string\" && this.props.error.length > 0}\n              id=\"invite-code-input\"\n              label=\"Username\"\n              value={this.props.username}\n              onChange={this.handleChange}\n              margin=\"normal\"\n              fullWidth\n            />\n            <div\n              className={classes.buttonWrapper}\n            >\n              <Button\n                fullWidth\n                type={\"submit\"}\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={this.props.username === '' || this.props.loading}\n              >\n                Add\n              </Button>\n              {this.props.loading && <CircularProgress size={loadingIconSize} className={classes.buttonProgress} />}\n            </div>\n          </form>\n        </MyPaper>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(AddCompetitor));\n","import React, { Component } from 'react';\nimport {\n  Button,\n  IconButton,\n  InputAdornment,\n  Link,\n  Modal,\n  StyledComponentProps,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport { setInviteCode } from \"../actions\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { inviteCodeIsCorrect } from \"../selectors\";\nimport GlobalState from \"../types/GlobalState\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport { MyPaper } from \"./AddCompetitor\";\nimport { showSnackbarAction, SnackbarType } from \"../actions/snackbar\";\n\nconst mapStateToProps = ({ user }: GlobalState) => ({\n  inviteCode: user.inviteCode,\n  inviteCodeIsCorrect: inviteCodeIsCorrect(user),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      setInviteCode,\n      showSnackbarAction,\n    },\n    dispatch\n  );\n\nexport type InviteCodeProps =\n  ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {};\n\ntype InviteCodeState = {\n  showInviteCode: boolean,\n  triedToSubmit: boolean,\n};\n\nclass InviteCode extends Component<InviteCodeProps, InviteCodeState> {\n  state: InviteCodeState = {\n    showInviteCode: false,\n    triedToSubmit: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.props.setInviteCode(event.target.value);\n  };\n\n  render() {\n    return (\n      <Modal open={!this.props.inviteCodeIsCorrect}>\n        <MyPaper>\n          <Typography variant=\"h5\" component=\"h3\">\n            Enter your invite code.\n          </Typography>\n          <Typography component=\"p\" style={{ maxWidth: 365 }}>\n            Mobline is currently in beta, so we only let the very limited number of users access our service.<br />\n          </Typography>\n          <Typography component=\"p\" style={{ maxWidth: 365 }}>\n            You may <Link\n            target=\"_blank\"\n            rel=\"noopener\"\n            href=\"mailto:maxim@mazurok.com?subject=Mobline invite code request\">request invite code</Link> if you want\n            to participate in our beta program.\n          </Typography>\n          <TextField\n            error={this.state.triedToSubmit && !this.props.inviteCodeIsCorrect}\n            fullWidth\n            id=\"invite-code-input\"\n            label=\"Invite Code\"\n            value={this.props.inviteCode}\n            onChange={this.handleChange}\n            margin=\"normal\"\n            type={this.state.showInviteCode ? 'text' : 'password'}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    edge=\"end\"\n                    aria-label=\"Toggle password visibility\"\n                    onClick={() => this.setState({ showInviteCode: !this.state.showInviteCode })}\n                  >\n                    {this.state.showInviteCode ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={this.props.inviteCode === ''}\n            onClick={() => {\n              this.setState({ triedToSubmit: true });\n              if (!this.props.inviteCodeIsCorrect) {\n                this.props.showSnackbarAction({\n                  title: \"Invite code is incorrect, sorry.\",\n                  type: SnackbarType.ERROR,\n                });\n              }\n            }}\n          >\n            Let me in!\n          </Button>\n        </MyPaper>\n      </Modal>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(InviteCode);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport GlobalState from \"../types/GlobalState\";\nimport { loadCompetitors } from \"../actions/loadCompetitors\";\nimport {\n  CircularProgress,\n  createStyles,\n  Fab,\n  List,\n  ListItem,\n  ListItemText,\n  Paper,\n  StyledComponentProps,\n  Theme,\n  Typography,\n  withStyles\n} from \"@material-ui/core\";\nimport { addCompetitor, addCompetitorSetUsername, addCompetitorShowModal } from \"../actions/addCompetitor\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { grey, red } from \"@material-ui/core/colors\";\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    fabWrapper: {\n      margin: 0,\n      top: 'auto',\n      right: theme.spacing(3),\n      bottom: theme.spacing(3),\n      left: 'auto',\n      position: 'fixed',\n    },\n    noCompetitorsFound: {\n      color: grey[600],\n    },\n    errorMessage: {\n      color: red[900],\n    },\n  });\n\nconst mapStateToProps = ({ user, loadCompetitors }: GlobalState) => ({\n  loadCompetitorsError: loadCompetitors.error,\n  loadCompetitorsCompetitors: loadCompetitors.competitors,\n  loadCompetitorsLoading: loadCompetitors.loading,\n  customerId: user.customerId,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      loadCompetitors,\n      addCompetitor,\n      addCompetitorSetUsername,\n      addCompetitorShowModal,\n    },\n    dispatch\n  );\n\nexport type CompetitorsListProps =\n  ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {\n  classes: {\n    fabWrapper: string,\n    noCompetitorsFound: string,\n    errorMessage: string,\n  },\n};\n\ntype CompetitorsListState = {}\n\nclass CompetitorsList extends Component<CompetitorsListProps, CompetitorsListState> {\n  componentDidMount(): void {\n    this.props.loadCompetitors();\n  }\n\n  render(): React.ReactElement<CompetitorsListProps, React.JSXElementConstructor<CompetitorsListState>> {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <div\n          className={`${classes.fabWrapper} mui-fixed`}\n        >\n          <Fab\n            color=\"primary\"\n            variant=\"extended\"\n            aria-label=\"Add\"\n            onClick={() => this.props.addCompetitorShowModal()}\n          >\n            <AddIcon />\n            Add new competitor\n          </Fab>\n        </div>\n        {this.props.loadCompetitorsLoading ?\n          <CircularProgress />\n          :\n          this.props.loadCompetitorsError ?\n            <Typography\n              variant=\"h5\"\n              gutterBottom\n              className={classes.errorMessage}\n            >\n              {this.props.loadCompetitorsError}\n            </Typography>\n            :\n            this.props.loadCompetitorsCompetitors.length > 0 ?\n              <Paper>\n                <List>\n                  {this.props.loadCompetitorsCompetitors.map((competitor, index) =>\n                    <ListItem key={index}>\n                      <ListItemText primary={competitor.userPk} />\n                    </ListItem>\n                  )}\n                </List>\n              </Paper>\n              :\n              <Typography\n                variant=\"h5\"\n                gutterBottom\n                className={classes.noCompetitorsFound}\n              >\n                No competitors found, add them first.\n              </Typography>\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport const CompetitorsListConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(CompetitorsList));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  createStyles,\n  IconButton,\n  Snackbar as MaterialSnackbar,\n  SnackbarContent,\n  StyledComponentProps,\n  Theme,\n  withStyles\n} from \"@material-ui/core\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport GlobalState from \"../types/GlobalState\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { showSnackbarAction, SnackbarType } from \"../actions/snackbar\";\nimport { amber, green } from \"@material-ui/core/colors\";\nimport clsx from 'clsx';\n\nconst variantIcon = {\n  [SnackbarType.SUCCESS]: CheckCircleIcon,\n  [SnackbarType.WARNING]: WarningIcon,\n  [SnackbarType.ERROR]: ErrorIcon,\n  [SnackbarType.INFO]: InfoIcon,\n  [SnackbarType.HIDDEN]: null,\n};\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    [SnackbarType.SUCCESS]: {\n      backgroundColor: green[600],\n    },\n    [SnackbarType.WARNING]: {\n      backgroundColor: amber[700],\n    },\n    [SnackbarType.ERROR]: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    [SnackbarType.INFO]: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    [SnackbarType.HIDDEN]: {\n      backgroundColor: theme.palette.primary.dark,\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  });\n\nconst mapStateToProps = ({ snackbar }: GlobalState) => ({\n  snackbar,\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) =>\n  bindActionCreators(\n    {\n      showSnackbarAction,\n    },\n    dispatch\n  );\n\nexport type SnackbarProps =\n  ReturnType<typeof mapStateToProps>\n  & ReturnType<typeof mapDispatchToProps>\n  & StyledComponentProps\n  & {\n  classes: {\n    [SnackbarType.SUCCESS]: string,\n    [SnackbarType.WARNING]: string,\n    [SnackbarType.ERROR]: string,\n    [SnackbarType.INFO]: string,\n    [SnackbarType.HIDDEN]: string,\n    icon: string,\n    iconVariant: string,\n    message: string,\n  },\n};\n\ntype SnackbarState = {}\n\nclass Snackbar extends Component<SnackbarProps, SnackbarState> {\n  handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    this.props.showSnackbarAction({\n      type: SnackbarType.HIDDEN,\n      title: \"\",\n    });\n  };\n\n  render(): React.ReactElement<SnackbarProps, React.JSXElementConstructor<SnackbarState>> | null {\n    if (this.props.snackbar.type === SnackbarType.HIDDEN) {\n      return null;\n    }\n\n    const { classes } = this.props;\n\n    const Icon = variantIcon[this.props.snackbar.type];\n\n    return (\n      <MaterialSnackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        open={true}\n        autoHideDuration={6000}\n        onClose={this.handleClose}\n      >\n        <SnackbarContent\n          className={classes[this.props.snackbar.type]}\n          aria-describedby=\"client-snackbar\"\n          message={\n            <span\n              id=\"client-snackbar\"\n              className={classes.message}\n            >\n              <Icon className={clsx(classes.icon, classes.iconVariant)} />\n              {this.props.snackbar.title}\n            </span>\n          }\n          action={[\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={this.handleClose}\n            >\n              <CloseIcon className={classes.icon} />\n            </IconButton>\n          ]} />\n      </MaterialSnackbar>\n    );\n  }\n}\n\nexport const SnackbarConnected = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(withStyles(styles)(Snackbar));\n","import { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();\n","import ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport { makeMainRoutes } from \"./routes\";\n\nconst routes = makeMainRoutes();\n\nReactDOM.render(\n  routes,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport App from './App';\nimport history from './history';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nexport const makeMainRoutes = (): React.ReactElement => {\n  return (\n    <Provider store={store}>\n      <Router history={history}>\n        <div>\n          <Route path=\"/\" component={App} />\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n"],"sourceRoot":""}